# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test_pyqt5.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import sys
curPath = os.path.abspath(os.path.dirname(__file__))
rootPath = os.path.split(curPath)[0]
sys.path.append(rootPath)
from PyQt5 import QtCore, QtGui, QtWidgets
import qdarkstyle
from PyQt5 import QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtWidgets import QApplication
from qtpy import uic
from stock_ui.util.UiDataUtils import *

'''
需要x-shell 的xmanager做图形回传
linux运行：env | grep DISPLAY
py文件编辑配置设置这个环境变量(每次都会变，如果直接在shell运行就不用设置)
DISPLAY=localhost:13.0

QMainWindow:有菜单栏，工具栏，状态栏，最常见；
QDialog：对话窗口的基类；
QWidget：不确定窗口的用途，就是用QWidget；
'''
class StockMainWindow(QtWidgets.QMainWindow):
    def __init__(self):
        # super(StockMainWindow, self).__init__()
        super().__init__()
        self._init_view()
        self._init_data()
    def _init_view(self):
        # create main window
        self.setObjectName('main_window')
        self.ui = uic.loadUi(os.path.join(curPath, 'designer/app_main.ui'), self)
        self.setWindowTitle('量化系统')

    def _init_data(self):
        # 初始化信息
        self.ui.dateTimeEdit.setDate(trade_date())

    def show_main_window(self):
        # 大屏显示
        self.showMinimized()


# python /opt/code/pythonstudy_space/05_quantitative_trading_hive/stock_ui/StockMainWindow.py
if __name__ == '__main__':
    # 创建QApplication
    app = QApplication(sys.argv)
    # 设置样式表
    app.setStyleSheet(qdarkstyle.load_stylesheet())
    # 主窗口
    main_window = StockMainWindow()
    main_window.show_main_window()

    sys.exit(app.exec_())
