<?xml version="1.0" encoding="UTF-8"?>
<dataSource name="hive">
  <database-model serializer="dbm" dbms="HIVE" family-id="HIVE" format-version="4.32">
    <root id="1">
      <ServerVersion>3.1.2</ServerVersion>
    </root>
    <routine id="2" parent="1" name="abs">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFAbs</ClassName>
      <Comment>abs(x) - returns the absolute value of x</Comment>
    </routine>
    <routine id="3" parent="1" name="acos">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFAcos</ClassName>
      <Comment>acos(x) - returns the arc cosine of x if -1&lt;=x&lt;=1 or NULL otherwise</Comment>
    </routine>
    <routine id="4" parent="1" name="add_months">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFAddMonths</ClassName>
      <Comment>add_months(start_date, num_months, output_date_format) - Returns the date that is num_months after start_date.</Comment>
    </routine>
    <routine id="5" parent="1" name="aes_decrypt">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFAesDecrypt</ClassName>
      <Comment>aes_decrypt(input binary, key string/binary) - Decrypt input using AES.</Comment>
    </routine>
    <routine id="6" parent="1" name="aes_encrypt">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFAesEncrypt</ClassName>
      <Comment>aes_encrypt(input string/binary, key string/binary) - Encrypt input using AES.</Comment>
    </routine>
    <routine id="7" parent="1" name="array">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFArray</ClassName>
      <Comment>array(n0, n1...) - Creates an array with the given elements</Comment>
    </routine>
    <routine id="8" parent="1" name="array_contains">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFArrayContains</ClassName>
      <Comment>array_contains(array, value) - Returns TRUE if the array contains value.</Comment>
    </routine>
    <routine id="9" parent="1" name="ascii">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFAscii</ClassName>
      <Comment>ascii(str) - returns the numeric value of the first character of str</Comment>
    </routine>
    <routine id="10" parent="1" name="asin">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFAsin</ClassName>
      <Comment>asin(x) - returns the arc sine of x if -1&lt;=x&lt;=1 or NULL otherwise</Comment>
    </routine>
    <routine id="11" parent="1" name="assert_true">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFAssertTrue</ClassName>
      <Comment>assert_true(condition) - Throw an exception if &apos;condition&apos; is not true.</Comment>
    </routine>
    <routine id="12" parent="1" name="assert_true_oom">
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFAssertTrueOOM</ClassName>
      <Comment>There is no documentation for function &apos;assert_true_oom&apos;</Comment>
    </routine>
    <routine id="13" parent="1" name="atan">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFAtan</ClassName>
      <Comment>atan(x) - returns the atan (arctan) of x (x is in radians)</Comment>
    </routine>
    <routine id="14" parent="1" name="avg">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFAverage</ClassName>
      <Comment>avg(x) - Returns the mean of a set of numbers</Comment>
    </routine>
    <routine id="15" parent="1" name="base64">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFBase64</ClassName>
      <Comment>base64(bin) - Convert the argument from binary to a base 64 string</Comment>
    </routine>
    <routine id="16" parent="1" name="bin">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFBin</ClassName>
      <Comment>bin(n) - returns n in binary</Comment>
    </routine>
    <routine id="17" parent="1" name="bloom_filter">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFBloomFilter</ClassName>
      <Comment>There is no documentation for function &apos;bloom_filter&apos;</Comment>
    </routine>
    <routine id="18" parent="1" name="bround">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFBRound</ClassName>
      <Comment>bround(x[, d]) - round x to d decimal places using HALF_EVEN rounding mode.</Comment>
    </routine>
    <routine id="19" parent="1" name="cardinality_violation">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFCardinalityViolation</ClassName>
      <Comment>cardinality_violation(n0, n1...) - raises Cardinality Violation</Comment>
    </routine>
    <routine id="20" parent="1" name="cbrt">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFCbrt</ClassName>
      <Comment>cbrt(double) - Returns the cube root of a double value.</Comment>
    </routine>
    <routine id="21" parent="1" name="ceil">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFCeil</ClassName>
      <Comment>ceil(x) - Find the smallest integer not smaller than x</Comment>
    </routine>
    <routine id="22" parent="1" name="ceiling">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFCeil</ClassName>
      <Comment>ceiling(x) - Find the smallest integer not smaller than x</Comment>
    </routine>
    <routine id="23" parent="1" name="char_length">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFCharacterLength</ClassName>
      <Comment>char_length(str | binary) - Returns the number of characters in str or binary data</Comment>
    </routine>
    <routine id="24" parent="1" name="character_length">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFCharacterLength</ClassName>
      <Comment>character_length(str | binary) - Returns the number of characters in str or binary data</Comment>
    </routine>
    <routine id="25" parent="1" name="chr">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFChr</ClassName>
      <Comment>chr(str) - convert n where n : [0, 256) into the ascii equivalent as a varchar.If n is less than 0 return the empty string. If n &gt; 256, return chr(n % 256).</Comment>
    </routine>
    <routine id="26" parent="1" name="coalesce">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFCoalesce</ClassName>
      <Comment>coalesce(a1, a2, ...) - Returns the first non-null argument</Comment>
    </routine>
    <routine id="27" parent="1" name="collect_list">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFCollectList</ClassName>
      <Comment>collect_list(x) - Returns a list of objects with duplicates</Comment>
    </routine>
    <routine id="28" parent="1" name="collect_set">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFCollectSet</ClassName>
      <Comment>collect_set(x) - Returns a set of objects with duplicate elements eliminated</Comment>
    </routine>
    <routine id="29" parent="1" name="compute_stats">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFComputeStats</ClassName>
      <Comment>compute_stats(x) - Returns the statistical summary of a set of primitive type values.</Comment>
    </routine>
    <routine id="30" parent="1" name="concat">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFConcat</ClassName>
      <Comment>concat(str1, str2, ... strN) - returns the concatenation of str1, str2, ... strN or concat(bin1, bin2, ... binN) - returns the concatenation of bytes in binary data  bin1, bin2, ... binN</Comment>
    </routine>
    <routine id="31" parent="1" name="concat_ws">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFConcatWS</ClassName>
      <Comment>concat_ws(separator, [string | array(string)]+) - returns the concatenation of the strings separated by the separator.</Comment>
    </routine>
    <routine id="32" parent="1" name="context_ngrams">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFContextNGrams</ClassName>
      <Comment>context_ngrams(expr, array&lt;string1, string2, ...&gt;, k, pf) estimates the top-k most frequent n-grams that fit into the specified context. The second parameter specifies a string of words that specify the positions of the n-gram elements, with a null value standing in for a &apos;blank&apos; that must be filled by an n-gram element.</Comment>
    </routine>
    <routine id="33" parent="1" name="conv">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFConv</ClassName>
      <Comment>conv(num, from_base, to_base) - convert num from from_base to to_base</Comment>
    </routine>
    <routine id="34" parent="1" name="corr">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFCorrelation</ClassName>
      <Comment>corr(y,x) - Returns the Pearson coefficient of correlation</Comment>
    </routine>
    <routine id="35" parent="1" name="cos">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFCos</ClassName>
      <Comment>cos(x) - returns the cosine of x (x is in radians)</Comment>
    </routine>
    <routine id="36" parent="1" name="count">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFCount</ClassName>
      <Comment>count(*) - Returns the total number of retrieved rows, including rows containing NULL values.</Comment>
    </routine>
    <routine id="37" parent="1" name="covar_pop">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFCovariance</ClassName>
      <Comment>covar_pop(x,y) - Returns the population covariance of a set of number pairs</Comment>
    </routine>
    <routine id="38" parent="1" name="covar_samp">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFCovarianceSample</ClassName>
      <Comment>covar_samp(x,y) - Returns the sample covariance of a set of number pairs</Comment>
    </routine>
    <routine id="39" parent="1" name="crc32">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFCrc32</ClassName>
      <Comment>crc32(str or bin) - Computes a cyclic redundancy check value for string or binary argument and returns bigint value.</Comment>
    </routine>
    <routine id="40" parent="1" name="create_union">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFUnion</ClassName>
      <Comment>create_union(tag, obj1, obj2, obj3, ...) - Creates a union with the object for given tag</Comment>
    </routine>
    <routine id="41" parent="1" name="cume_dist">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFCumeDist</ClassName>
      <Comment>There is no documentation for function &apos;cume_dist&apos;</Comment>
    </routine>
    <routine id="42" parent="1" name="current_authorizer">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFCurrentAuthorizer</ClassName>
      <Comment>current_authorizer() - Returns the current authorizer (class name of the authorizer).</Comment>
    </routine>
    <routine id="43" parent="1" name="current_database">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.UDFCurrentDB</ClassName>
      <Comment>current_database() - returns currently using database name</Comment>
    </routine>
    <routine id="44" parent="1" name="current_date">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFCurrentDate</ClassName>
      <Comment>current_date() - Returns the current date at the start of query evaluation. All calls of current_date within the same query return the same value.</Comment>
    </routine>
    <routine id="45" parent="1" name="current_groups">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFCurrentGroups</ClassName>
      <Comment>current_groups() - Returns all groups the current user belongs to</Comment>
    </routine>
    <routine id="46" parent="1" name="current_timestamp">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFCurrentTimestamp</ClassName>
      <Comment>current_timestamp() - Returns the current timestamp at the start of query evaluation. All calls of current_timestamp within the same query return the same value.</Comment>
    </routine>
    <routine id="47" parent="1" name="current_user">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFCurrentUser</ClassName>
      <Comment>current_user() - Returns current user name</Comment>
    </routine>
    <routine id="48" parent="1" name="date_add">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFDateAdd</ClassName>
      <Comment>date_add(start_date, num_days) - Returns the date that is num_days after start_date.</Comment>
    </routine>
    <routine id="49" parent="1" name="date_format">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFDateFormat</ClassName>
      <Comment>date_format(date/timestamp/string, fmt) - converts a date/timestamp/string to a value of string in the format specified by the date format fmt.</Comment>
    </routine>
    <routine id="50" parent="1" name="date_sub">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFDateSub</ClassName>
      <Comment>date_sub(start_date, num_days) - Returns the date that is num_days before start_date.</Comment>
    </routine>
    <routine id="51" parent="1" name="datediff">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFDateDiff</ClassName>
      <Comment>datediff(date1, date2) - Returns the number of days between date1 and date2</Comment>
    </routine>
    <routine id="52" parent="1" name="day">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFDayOfMonth</ClassName>
      <Comment>day(param) - Returns the day of the month of date/timestamp, or day component of interval</Comment>
    </routine>
    <routine id="53" parent="1" name="dayofmonth">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFDayOfMonth</ClassName>
      <Comment>dayofmonth(param) - Returns the day of the month of date/timestamp, or day component of interval</Comment>
    </routine>
    <routine id="54" parent="1" name="dayofweek">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFDayOfWeek</ClassName>
      <Comment>dayofweek(param) - Returns the day of the week of date/timestamp (1 = Sunday, 2 = Monday, ..., 7 = Saturday)</Comment>
    </routine>
    <routine id="55" parent="1" name="decode">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFDecode</ClassName>
      <Comment>decode(bin, str) - Decode the first argument using the second argument character set</Comment>
    </routine>
    <routine id="56" parent="1" name="degrees">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFDegrees</ClassName>
      <Comment>degrees(x) - Converts radians to degrees</Comment>
    </routine>
    <routine id="57" parent="1" name="dense_rank">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFDenseRank</ClassName>
      <Comment>There is no documentation for function &apos;dense_rank&apos;</Comment>
    </routine>
    <routine id="58" parent="1" name="e">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFE</ClassName>
      <Comment>e() - returns E</Comment>
    </routine>
    <routine id="59" parent="1" name="elt">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFElt</ClassName>
      <Comment>elt(n, str1, str2, ...) - returns the n-th string</Comment>
    </routine>
    <routine id="60" parent="1" name="encode">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFEncode</ClassName>
      <Comment>encode(str, str) - Encode the first argument using the second argument character set</Comment>
    </routine>
    <routine id="61" parent="1" name="enforce_constraint">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFEnforceConstraint</ClassName>
      <Comment>enforce_constraint(x) - Internal UDF to enforce CHECK and NOT NULL constraint</Comment>
    </routine>
    <routine id="62" parent="1" name="exp">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFExp</ClassName>
      <Comment>exp(x) - Returns e to the power of x</Comment>
    </routine>
    <routine id="63" parent="1" name="explode">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDTFExplode</ClassName>
      <Comment>explode(a) - separates the elements of array a into multiple rows, or the elements of a map into multiple rows and columns</Comment>
    </routine>
    <routine id="64" parent="1" name="extract_union">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFExtractUnion</ClassName>
      <Comment>extract_union(union[, tag]) - Recursively explodes unions into structs or simply extracts the given tag.</Comment>
    </routine>
    <routine id="65" parent="1" name="factorial">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFFactorial</ClassName>
      <Comment>factorial(int) - Returns n factorial. Valid n is [0..20].</Comment>
    </routine>
    <routine id="66" parent="1" name="field">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFField</ClassName>
      <Comment>field(str, str1, str2, ...) - returns the index of str in the str1,str2,... list or 0 if not found</Comment>
    </routine>
    <routine id="67" parent="1" name="find_in_set">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFFindInSet</ClassName>
      <Comment>find_in_set(str,str_array) - Returns the first occurrence  of str in str_array where str_array is a comma-delimited string. Returns null if either argument is null. Returns 0 if the first argument has any commas.</Comment>
    </routine>
    <routine id="68" parent="1" name="first_value">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFFirstValue</ClassName>
      <Comment>There is no documentation for function &apos;first_value&apos;</Comment>
    </routine>
    <routine id="69" parent="1" name="floor">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFFloor</ClassName>
      <Comment>floor(x) - Find the largest integer not greater than x</Comment>
    </routine>
    <routine id="70" parent="1" name="floor_day">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFDateFloorDay</ClassName>
      <Comment>floor_day(param) - Returns the timestamp at a day granularity</Comment>
    </routine>
    <routine id="71" parent="1" name="floor_hour">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFDateFloorHour</ClassName>
      <Comment>floor_hour(param) - Returns the timestamp at a hour granularity</Comment>
    </routine>
    <routine id="72" parent="1" name="floor_minute">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFDateFloorMinute</ClassName>
      <Comment>floor_minute(param) - Returns the timestamp at a minute granularity</Comment>
    </routine>
    <routine id="73" parent="1" name="floor_month">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFDateFloorMonth</ClassName>
      <Comment>floor_month(param) - Returns the timestamp at a month granularity</Comment>
    </routine>
    <routine id="74" parent="1" name="floor_quarter">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFDateFloorQuarter</ClassName>
      <Comment>floor_quarter(param) - Returns the timestamp at a quarter granularity</Comment>
    </routine>
    <routine id="75" parent="1" name="floor_second">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFDateFloorSecond</ClassName>
      <Comment>floor_second(param) - Returns the timestamp at a second granularity</Comment>
    </routine>
    <routine id="76" parent="1" name="floor_week">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFDateFloorWeek</ClassName>
      <Comment>floor_week(param) - Returns the timestamp at a week granularity</Comment>
    </routine>
    <routine id="77" parent="1" name="floor_year">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFDateFloorYear</ClassName>
      <Comment>floor_year(param) - Returns the timestamp at a year granularity</Comment>
    </routine>
    <routine id="78" parent="1" name="format_number">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFFormatNumber</ClassName>
      <Comment>format_number(X, D or F) - Formats the number X to a format like &apos;#,###,###.##&apos;, rounded to D decimal places, Or Uses the format specified F to format, and returns the result as a string. If D is 0, the result has no decimal point or fractional part. This is supposed to function like MySQL&apos;s FORMAT</Comment>
    </routine>
    <routine id="79" parent="1" name="from_unixtime">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFFromUnixTime</ClassName>
      <Comment>from_unixtime(unix_time, format) - returns unix_time in the specified format</Comment>
    </routine>
    <routine id="80" parent="1" name="from_utc_timestamp">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFFromUtcTimestamp</ClassName>
      <Comment>from_utc_timestamp(timestamp, string timezone) - Assumes given timestamp is UTC and converts to given timezone (as of Hive 0.8.0)</Comment>
    </routine>
    <routine id="81" parent="1" name="get_json_object">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFJson</ClassName>
      <Comment>get_json_object(json_txt, path) - Extract a json object from path</Comment>
    </routine>
    <routine id="82" parent="1" name="get_splits">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDTFGetSplits</ClassName>
      <Comment>get_splits(string,int) - Returns an array of length int serialized splits for the referenced tables string. Passing length 0 returns only schema data for the compiled query.</Comment>
    </routine>
    <routine id="83" parent="1" name="greatest">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFGreatest</ClassName>
      <Comment>greatest(v1, v2, ...) - Returns the greatest value in a list of values</Comment>
    </routine>
    <routine id="84" parent="1" name="grouping">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFGrouping</ClassName>
      <Comment>grouping(a, p1, ..., pn) - Indicates whether a specified column expression in is aggregated or not. Returns 1 for aggregated or 0 for not aggregated.</Comment>
    </routine>
    <routine id="85" parent="1" name="hash">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFHash</ClassName>
      <Comment>hash(a1, a2, ...) - Returns a hash value of the arguments</Comment>
    </routine>
    <routine id="86" parent="1" name="hex">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFHex</ClassName>
      <Comment>hex(n, bin, or str) - Convert the argument to hexadecimal</Comment>
    </routine>
    <routine id="87" parent="1" name="histogram_numeric">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFHistogramNumeric</ClassName>
      <Comment>histogram_numeric(expr, nb) - Computes a histogram on numeric &apos;expr&apos; using nb bins.</Comment>
    </routine>
    <routine id="88" parent="1" name="hour">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFHour</ClassName>
      <Comment>hour(param) - Returns the hour componemnt of the string/timestamp/interval</Comment>
    </routine>
    <routine id="89" parent="1" name="if">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFIf</ClassName>
      <Comment>IF(expr1,expr2,expr3) - If expr1 is TRUE (expr1 &lt;&gt; 0 and expr1 &lt;&gt; NULL) then IF() returns expr2; otherwise it returns expr3. IF() returns a numeric or string value, depending on the context in which it is used.</Comment>
    </routine>
    <routine id="90" parent="1" name="in_bloom_filter">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFInBloomFilter</ClassName>
      <Comment>There is no documentation for function &apos;in_bloom_filter&apos;</Comment>
    </routine>
    <routine id="91" parent="1" name="in_file">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFInFile</ClassName>
      <Comment>in_file(str, filename) - Returns true if str appears in the file</Comment>
    </routine>
    <routine id="92" parent="1" name="index">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFIndex</ClassName>
      <Comment>index(a, n) - Returns the n-th element of a</Comment>
    </routine>
    <routine id="93" parent="1" name="initcap">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFInitCap</ClassName>
      <Comment>initcap(str) - Returns str, with the first letter of each word in uppercase, all other letters in lowercase. Words are delimited by white space.</Comment>
    </routine>
    <routine id="94" parent="1" name="inline">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDTFInline</ClassName>
      <Comment>inline( ARRAY( STRUCT()[,STRUCT()] - explodes and array and struct into a table</Comment>
    </routine>
    <routine id="95" parent="1" name="instr">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFInstr</ClassName>
      <Comment>instr(str, substr) - Returns the index of the first occurance of substr in str</Comment>
    </routine>
    <routine id="96" parent="1" name="internal_interval">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFInternalInterval</ClassName>
      <Comment>internal_interval(intervalType,intervalArg)</Comment>
    </routine>
    <routine id="97" parent="1" name="isfalse">
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPFalse</ClassName>
      <Comment>isfalse a - Returns true if a is FALSE and false otherwise</Comment>
    </routine>
    <routine id="98" parent="1" name="isnotfalse">
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPNotFalse</ClassName>
      <Comment>isnotfalse a - Returns true if a is NOT FALSE and false otherwise</Comment>
    </routine>
    <routine id="99" parent="1" name="isnotnull">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPNotNull</ClassName>
      <Comment>isnotnull a - Returns true if a is not NULL and false otherwise</Comment>
    </routine>
    <routine id="100" parent="1" name="isnottrue">
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPNotTrue</ClassName>
      <Comment>isnottrue a - Returns true if a is NOT TRUE and false otherwise</Comment>
    </routine>
    <routine id="101" parent="1" name="isnull">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPNull</ClassName>
      <Comment>isnull a - Returns true if a is NULL and false otherwise</Comment>
    </routine>
    <routine id="102" parent="1" name="istrue">
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPTrue</ClassName>
      <Comment>istrue a - Returns true if a is TRUE and false otherwise</Comment>
    </routine>
    <routine id="103" parent="1" name="java_method">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFReflect</ClassName>
      <Comment>java_method(class,method[,arg1[,arg2..]]) calls method with reflection</Comment>
    </routine>
    <routine id="104" parent="1" name="json_tuple">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDTFJSONTuple</ClassName>
      <Comment>json_tuple(jsonStr, p1, p2, ..., pn) - like get_json_object, but it takes multiple names and return a tuple. All the input parameters and output column types are string.</Comment>
    </routine>
    <routine id="105" parent="1" name="lag">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLag</ClassName>
      <Comment>LAG  (scalar_expression [,offset] [,default]) OVER ([query_partition_clause] order_by_clause); The LAG function is used to access data from a previous row.</Comment>
    </routine>
    <routine id="106" parent="1" name="last_day">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLastDay</ClassName>
      <Comment>last_day(date) - Returns the last day of the month which the date belongs to.</Comment>
    </routine>
    <routine id="107" parent="1" name="last_value">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFLastValue</ClassName>
      <Comment>There is no documentation for function &apos;last_value&apos;</Comment>
    </routine>
    <routine id="108" parent="1" name="lcase">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLower</ClassName>
      <Comment>lcase(str) - Returns str with all characters changed to lowercase</Comment>
    </routine>
    <routine id="109" parent="1" name="lead">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLead</ClassName>
      <Comment>LEAD (scalar_expression [,offset] [,default]) OVER ([query_partition_clause] order_by_clause); The LEAD function is used to return data from the next row.</Comment>
    </routine>
    <routine id="110" parent="1" name="least">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLeast</ClassName>
      <Comment>least(v1, v2, ...) - Returns the least value in a list of values</Comment>
    </routine>
    <routine id="111" parent="1" name="length">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLength</ClassName>
      <Comment>length(str | binary) - Returns the length of str or number of bytes in binary data</Comment>
    </routine>
    <routine id="112" parent="1" name="levenshtein">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLevenshtein</ClassName>
      <Comment>levenshtein(str1, str2) - This function calculates the Levenshtein distance between two strings.</Comment>
    </routine>
    <routine id="113" parent="1" name="likeall">
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLikeAll</ClassName>
      <Comment>test likeall(pattern1, pattern2...) - returns true if test matches all patterns patternN.  Returns NULL if the expression on the left hand side is NULL or if one of the patterns in the list is NULL.</Comment>
    </routine>
    <routine id="114" parent="1" name="likeany">
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLikeAny</ClassName>
      <Comment>test likeany(pattern1, pattern2...) - returns true if test matches any patterns patternN. Returns NULL if the expression on the left hand side is NULL or if one of the patterns in the list is NULL.</Comment>
    </routine>
    <routine id="115" parent="1" name="ln">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFLn</ClassName>
      <Comment>ln(x) - Returns the natural logarithm of x</Comment>
    </routine>
    <routine id="116" parent="1" name="locate">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLocate</ClassName>
      <Comment>locate(substr, str[, pos]) - Returns the position of the first occurance of substr in str after position pos</Comment>
    </routine>
    <routine id="117" parent="1" name="log">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFLog</ClassName>
      <Comment>log([b], x) - Returns the logarithm of x with base b</Comment>
    </routine>
    <routine id="118" parent="1" name="log10">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFLog10</ClassName>
      <Comment>log10(x) - Returns the logarithm of x with base 10</Comment>
    </routine>
    <routine id="119" parent="1" name="log2">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFLog2</ClassName>
      <Comment>log2(x) - Returns the logarithm of x with base 2</Comment>
    </routine>
    <routine id="120" parent="1" name="logged_in_user">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLoggedInUser</ClassName>
      <Comment>logged_in_user() - Returns logged in user name</Comment>
    </routine>
    <routine id="121" parent="1" name="lower">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLower</ClassName>
      <Comment>lower(str) - Returns str with all characters changed to lowercase</Comment>
    </routine>
    <routine id="122" parent="1" name="lpad">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLpad</ClassName>
      <Comment>lpad(str, len, pad) - Returns str, left-padded with pad to a length of len</Comment>
    </routine>
    <routine id="123" parent="1" name="ltrim">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFLTrim</ClassName>
      <Comment>ltrim(str) - Removes the leading space characters from str</Comment>
    </routine>
    <routine id="124" parent="1" name="map">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFMap</ClassName>
      <Comment>map(key0, value0, key1, value1...) - Creates a map with the given key/value pairs</Comment>
    </routine>
    <routine id="125" parent="1" name="map_keys">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFMapKeys</ClassName>
      <Comment>map_keys(map) - Returns an unordered array containing the keys of the input map.</Comment>
    </routine>
    <routine id="126" parent="1" name="map_values">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFMapValues</ClassName>
      <Comment>map_values(map) - Returns an unordered array containing the values of the input map.</Comment>
    </routine>
    <routine id="127" parent="1" name="mask">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFMask</ClassName>
      <Comment>masks the given value</Comment>
    </routine>
    <routine id="128" parent="1" name="mask_first_n">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFMaskFirstN</ClassName>
      <Comment>masks the first n characters of the value</Comment>
    </routine>
    <routine id="129" parent="1" name="mask_hash">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFMaskHash</ClassName>
      <Comment>returns hash of the given value</Comment>
    </routine>
    <routine id="130" parent="1" name="mask_last_n">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFMaskLastN</ClassName>
      <Comment>masks the last n characters of the value</Comment>
    </routine>
    <routine id="131" parent="1" name="mask_show_first_n">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFMaskShowFirstN</ClassName>
      <Comment>masks all but first n characters of the value</Comment>
    </routine>
    <routine id="132" parent="1" name="mask_show_last_n">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFMaskShowLastN</ClassName>
      <Comment>masks all but last n characters of the value</Comment>
    </routine>
    <routine id="133" parent="1" name="matchpath">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.ptf.MatchPath$MatchPathResolver</ClassName>
      <Comment>There is no documentation for function &apos;matchpath&apos;</Comment>
    </routine>
    <routine id="134" parent="1" name="max">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFMax</ClassName>
      <Comment>max(expr) - Returns the maximum value of expr</Comment>
    </routine>
    <routine id="135" parent="1" name="md5">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFMd5</ClassName>
      <Comment>md5(str or bin) - Calculates an MD5 128-bit checksum for the string or binary.</Comment>
    </routine>
    <routine id="136" parent="1" name="min">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFMin</ClassName>
      <Comment>min(expr) - Returns the minimum value of expr</Comment>
    </routine>
    <routine id="137" parent="1" name="minute">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFMinute</ClassName>
      <Comment>minute(param) - Returns the minute component of the string/timestamp/interval</Comment>
    </routine>
    <routine id="138" parent="1" name="mod">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPMod</ClassName>
      <Comment>a mod b - Returns the remainder when dividing a by b</Comment>
    </routine>
    <routine id="139" parent="1" name="month">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFMonth</ClassName>
      <Comment>month(param) - Returns the month component of the date/timestamp/interval</Comment>
    </routine>
    <routine id="140" parent="1" name="months_between">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFMonthsBetween</ClassName>
      <Comment>months_between(date1, date2, roundOff) - returns number of months between dates date1 and date2</Comment>
    </routine>
    <routine id="141" parent="1" name="murmur_hash">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFMurmurHash</ClassName>
      <Comment>murmur_hash(a1, a2, ...) - Returns a hash value of the arguments</Comment>
    </routine>
    <routine id="142" parent="1" name="named_struct">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFNamedStruct</ClassName>
      <Comment>named_struct(name1, val1, name2, val2, ...) - Creates a struct with the given field names and values</Comment>
    </routine>
    <routine id="143" parent="1" name="negative">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPNegative</ClassName>
      <Comment>negative a - Returns -a</Comment>
    </routine>
    <routine id="144" parent="1" name="next_day">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFNextDay</ClassName>
      <Comment>next_day(start_date, day_of_week) - Returns the first date which is later than start_date and named as indicated.</Comment>
    </routine>
    <routine id="145" parent="1" name="ngrams">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFnGrams</ClassName>
      <Comment>ngrams(expr, n, k, pf) - Estimates the top-k n-grams in rows that consist of sequences of strings, represented as arrays of strings, or arrays of arrays of strings. &apos;pf&apos; is an optional precision factor that controls memory usage.</Comment>
    </routine>
    <routine id="146" parent="1" name="noop">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.ptf.Noop$NoopResolver</ClassName>
      <Comment>There is no documentation for function &apos;noop&apos;</Comment>
    </routine>
    <routine id="147" parent="1" name="noopstreaming">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.ptf.NoopStreaming$NoopStreamingResolver</ClassName>
      <Comment>There is no documentation for function &apos;noopstreaming&apos;</Comment>
    </routine>
    <routine id="148" parent="1" name="noopwithmap">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.ptf.NoopWithMap$NoopWithMapResolver</ClassName>
      <Comment>There is no documentation for function &apos;noopwithmap&apos;</Comment>
    </routine>
    <routine id="149" parent="1" name="noopwithmapstreaming">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.ptf.NoopWithMapStreaming$NoopWithMapStreamingResolver</ClassName>
      <Comment>There is no documentation for function &apos;noopwithmapstreaming&apos;</Comment>
    </routine>
    <routine id="150" parent="1" name="not">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPNot</ClassName>
      <Comment>not a - Logical not</Comment>
    </routine>
    <routine id="151" parent="1" name="ntile">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFNTile</ClassName>
      <Comment>There is no documentation for function &apos;ntile&apos;</Comment>
    </routine>
    <routine id="152" parent="1" name="nullif">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFNullif</ClassName>
      <Comment>nullif(a1, a2) - shorthand for: case when a1 = a2 then null else a1</Comment>
    </routine>
    <routine id="153" parent="1" name="nvl">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFNvl</ClassName>
      <Comment>nvl(value,default_value) - Returns default value if value is null else returns value</Comment>
    </routine>
    <routine id="154" parent="1" name="octet_length">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFOctetLength</ClassName>
      <Comment>octet_length(str | binary) - Returns the number of bytes in str or binary data</Comment>
    </routine>
    <routine id="155" parent="1" name="parse_url">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFParseUrl</ClassName>
      <Comment>parse_url(url, partToExtract[, key]) - extracts a part from a URL</Comment>
    </routine>
    <routine id="156" parent="1" name="parse_url_tuple">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDTFParseUrlTuple</ClassName>
      <Comment>parse_url_tuple(url, partname1, partname2, ..., partnameN) - extracts N (N&gt;=1) parts from a URL.</Comment>
    </routine>
    <routine id="157" parent="1" name="percent_rank">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFPercentRank</ClassName>
      <Comment>There is no documentation for function &apos;percent_rank&apos;</Comment>
    </routine>
    <routine id="158" parent="1" name="percentile">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDAFPercentile</ClassName>
      <Comment>percentile(expr, pc) - Returns the percentile(s) of expr at pc (range: [0,1]).pc can be a double or double array</Comment>
    </routine>
    <routine id="159" parent="1" name="percentile_approx">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFPercentileApprox</ClassName>
      <Comment>percentile_approx(expr, pc, [nb]) - For very large data, computes an approximate percentile value from a histogram, using the optional argument [nb] as the number of histogram bins to use. A higher value of nb results in a more accurate approximation, at the cost of higher memory usage.</Comment>
    </routine>
    <routine id="160" parent="1" name="pi">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFPI</ClassName>
      <Comment>pi() - returns pi</Comment>
    </routine>
    <routine id="161" parent="1" name="pmod">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFPosMod</ClassName>
      <Comment>a pmod b - Compute the positive modulo</Comment>
    </routine>
    <routine id="162" parent="1" name="posexplode">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDTFPosExplode</ClassName>
      <Comment>posexplode(a) - behaves like explode for arrays, but includes the position of items in the original array</Comment>
    </routine>
    <routine id="163" parent="1" name="positive">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFOPPositive</ClassName>
      <Comment>positive a - Returns a</Comment>
    </routine>
    <routine id="164" parent="1" name="pow">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFPower</ClassName>
      <Comment>pow(x1, x2) - raise x1 to the power of x2</Comment>
    </routine>
    <routine id="165" parent="1" name="power">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFPower</ClassName>
      <Comment>power(x1, x2) - raise x1 to the power of x2</Comment>
    </routine>
    <routine id="166" parent="1" name="printf">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFPrintf</ClassName>
      <Comment>printf(String format, Obj... args) - function that can format strings according to printf-style format strings</Comment>
    </routine>
    <routine id="167" parent="1" name="quarter">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFQuarter</ClassName>
      <Comment>quarter(date/timestamp/string) - Returns the quarter of the year for date, in the range 1 to 4.</Comment>
    </routine>
    <routine id="168" parent="1" name="radians">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFRadians</ClassName>
      <Comment>radians(x) - Converts degrees to radians</Comment>
    </routine>
    <routine id="169" parent="1" name="rand">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFRand</ClassName>
      <Comment>rand([seed]) - Returns a pseudorandom number between 0 and 1</Comment>
    </routine>
    <routine id="170" parent="1" name="rank">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFRank</ClassName>
      <Comment>There is no documentation for function &apos;rank&apos;</Comment>
    </routine>
    <routine id="171" parent="1" name="reflect">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFReflect</ClassName>
      <Comment>reflect(class,method[,arg1[,arg2..]]) calls method with reflection</Comment>
    </routine>
    <routine id="172" parent="1" name="reflect2">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFReflect2</ClassName>
      <Comment>reflect2(arg0,method[,arg1[,arg2..]]) calls method of arg0 with reflection</Comment>
    </routine>
    <routine id="173" parent="1" name="regexp_extract">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFRegExpExtract</ClassName>
      <Comment>regexp_extract(str, regexp[, idx]) - extracts a group that matches regexp</Comment>
    </routine>
    <routine id="174" parent="1" name="regexp_replace">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFRegExpReplace</ClassName>
      <Comment>regexp_replace(str, regexp, rep) - replace all substrings of str that match regexp with rep</Comment>
    </routine>
    <routine id="175" parent="1" name="regr_avgx">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFBinarySetFunctions$RegrAvgX</ClassName>
      <Comment>regr_avgx(y,x) - evaluates the average of the independent variable</Comment>
    </routine>
    <routine id="176" parent="1" name="regr_avgy">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFBinarySetFunctions$RegrAvgY</ClassName>
      <Comment>regr_avgy(y,x) - evaluates the average of the dependent variable</Comment>
    </routine>
    <routine id="177" parent="1" name="regr_count">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFBinarySetFunctions$RegrCount</ClassName>
      <Comment>regr_count(y,x) - returns the number of non-null pairs</Comment>
    </routine>
    <routine id="178" parent="1" name="regr_intercept">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFBinarySetFunctions$RegrIntercept</ClassName>
      <Comment>regr_intercept(y,x) - returns the y-intercept of the regression line.</Comment>
    </routine>
    <routine id="179" parent="1" name="regr_r2">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFBinarySetFunctions$RegrR2</ClassName>
      <Comment>regr_r2(y,x) - returns the coefficient of determination (also called R-squared or goodness of fit) for the regression line.</Comment>
    </routine>
    <routine id="180" parent="1" name="regr_slope">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFBinarySetFunctions$RegrSlope</ClassName>
      <Comment>regr_slope(y,x) - returns the slope of the linear regression line</Comment>
    </routine>
    <routine id="181" parent="1" name="regr_sxx">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFBinarySetFunctions$RegrSXX</ClassName>
      <Comment>regr_sxx(y,x) - auxiliary analytic function</Comment>
    </routine>
    <routine id="182" parent="1" name="regr_sxy">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFBinarySetFunctions$RegrSXY</ClassName>
      <Comment>regr_sxy(y,x) - return a value that can be used to evaluate the statistical validity of a regression model.</Comment>
    </routine>
    <routine id="183" parent="1" name="regr_syy">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFBinarySetFunctions$RegrSYY</ClassName>
      <Comment>regr_syy(y,x) - auxiliary analytic function</Comment>
    </routine>
    <routine id="184" parent="1" name="repeat">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFRepeat</ClassName>
      <Comment>repeat(str, n) - repeat str n times</Comment>
    </routine>
    <routine id="185" parent="1" name="replace">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFReplace</ClassName>
      <Comment>replace(str, search, rep) - replace all substrings of &apos;str&apos; that match &apos;search&apos; with &apos;rep&apos;</Comment>
    </routine>
    <routine id="186" parent="1" name="replicate_rows">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDTFReplicateRows</ClassName>
      <Comment>replicate_rows(n, cols...) - turns 1 row into n rows</Comment>
    </routine>
    <routine id="187" parent="1" name="restrict_information_schema">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFRestrictInformationSchema</ClassName>
      <Comment>restrict_information_schema() - Returns whether or not to enable information schema restriction. Currently it is enabled if either HS2 authorizer or metastore authorizer implements policy provider interface.</Comment>
    </routine>
    <routine id="188" parent="1" name="reverse">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFReverse</ClassName>
      <Comment>reverse(str) - reverse str</Comment>
    </routine>
    <routine id="189" parent="1" name="round">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFRound</ClassName>
      <Comment>round(x[, d]) - round x to d decimal places</Comment>
    </routine>
    <routine id="190" parent="1" name="row_number">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFRowNumber</ClassName>
      <Comment>There is no documentation for function &apos;row_number&apos;</Comment>
    </routine>
    <routine id="191" parent="1" name="rpad">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFRpad</ClassName>
      <Comment>rpad(str, len, pad) - Returns str, right-padded with pad to a length of len</Comment>
    </routine>
    <routine id="192" parent="1" name="rtrim">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFRTrim</ClassName>
      <Comment>rtrim(str) - Removes the trailing space characters from str</Comment>
    </routine>
    <routine id="193" parent="1" name="second">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFSecond</ClassName>
      <Comment>second(date) - Returns the second component of the string/timestamp/interval</Comment>
    </routine>
    <routine id="194" parent="1" name="sentences">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFSentences</ClassName>
      <Comment>sentences(str, lang, country) - Splits str into arrays of sentences, where each sentence is an array of words. The &apos;lang&apos; and&apos;country&apos; arguments are optional, and if omitted, the default locale is used.</Comment>
    </routine>
    <routine id="195" parent="1" name="sha">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFSha1</ClassName>
      <Comment>sha(str or bin) - Calculates the SHA-1 digest for string or binary and returns the value as a hex string.</Comment>
    </routine>
    <routine id="196" parent="1" name="sha1">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFSha1</ClassName>
      <Comment>sha1(str or bin) - Calculates the SHA-1 digest for string or binary and returns the value as a hex string.</Comment>
    </routine>
    <routine id="197" parent="1" name="sha2">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFSha2</ClassName>
      <Comment>sha2(string/binary, len) - Calculates the SHA-2 family of hash functions (SHA-224, SHA-256, SHA-384, and SHA-512).</Comment>
    </routine>
    <routine id="198" parent="1" name="shiftleft">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFOPBitShiftLeft</ClassName>
      <Comment>shiftleft(a, b) - Bitwise left shift</Comment>
    </routine>
    <routine id="199" parent="1" name="shiftright">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFOPBitShiftRight</ClassName>
      <Comment>shiftright(a, b) - Bitwise right shift</Comment>
    </routine>
    <routine id="200" parent="1" name="shiftrightunsigned">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFOPBitShiftRightUnsigned</ClassName>
      <Comment>shiftrightunsigned(a, b) - Bitwise unsigned right shift</Comment>
    </routine>
    <routine id="201" parent="1" name="sign">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFSign</ClassName>
      <Comment>sign(x) - returns the sign of x )</Comment>
    </routine>
    <routine id="202" parent="1" name="sin">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFSin</ClassName>
      <Comment>sin(x) - returns the sine of x (x is in radians)</Comment>
    </routine>
    <routine id="203" parent="1" name="size">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFSize</ClassName>
      <Comment>size(a) - Returns the size of a</Comment>
    </routine>
    <routine id="204" parent="1" name="sort_array">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFSortArray</ClassName>
      <Comment>sort_array(array(obj1, obj2,...)) - Sorts the input array in ascending order according to the natural ordering of the array elements.</Comment>
    </routine>
    <routine id="205" parent="1" name="sort_array_by">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFSortArrayByField</ClassName>
      <Comment>sort_array_by(array(obj1, obj2,...),&apos;f1&apos;,&apos;f2&apos;,...,[&apos;ASC&apos;,&apos;DESC&apos;]) - Sorts the input tuple array in user specified order(ASC,DESC) by desired field[s] name If sorting order is not mentioned by user then dafault sorting order is ascending</Comment>
    </routine>
    <routine id="206" parent="1" name="soundex">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFSoundex</ClassName>
      <Comment>soundex(string) - Returns soundex code of the string.</Comment>
    </routine>
    <routine id="207" parent="1" name="space">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFSpace</ClassName>
      <Comment>space(n) - returns n spaces</Comment>
    </routine>
    <routine id="208" parent="1" name="split">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFSplit</ClassName>
      <Comment>split(str, regex) - Splits str around occurances that match regex</Comment>
    </routine>
    <routine id="209" parent="1" name="sq_count_check">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFSQCountCheck</ClassName>
      <Comment>sq_count_check(x) - Internal check on scalar subquery expression to make sure atmost one row is returned</Comment>
    </routine>
    <routine id="210" parent="1" name="sqrt">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFSqrt</ClassName>
      <Comment>sqrt(x) - returns the square root of x</Comment>
    </routine>
    <routine id="211" parent="1" name="stack">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDTFStack</ClassName>
      <Comment>stack(n, cols...) - turns k columns into n rows of size k/n each</Comment>
    </routine>
    <routine id="212" parent="1" name="std">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFStd</ClassName>
      <Comment>std(x) - Returns the standard deviation of a set of numbers</Comment>
    </routine>
    <routine id="213" parent="1" name="stddev">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFStd</ClassName>
      <Comment>stddev(x) - Returns the standard deviation of a set of numbers</Comment>
    </routine>
    <routine id="214" parent="1" name="stddev_pop">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFStd</ClassName>
      <Comment>stddev_pop(x) - Returns the standard deviation of a set of numbers</Comment>
    </routine>
    <routine id="215" parent="1" name="stddev_samp">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFStdSample</ClassName>
      <Comment>stddev_samp(x) - Returns the sample standard deviation of a set of numbers.</Comment>
    </routine>
    <routine id="216" parent="1" name="str_to_map">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFStringToMap</ClassName>
      <Comment>str_to_map(text, delimiter1, delimiter2) - Creates a map by parsing text</Comment>
    </routine>
    <routine id="217" parent="1" name="struct">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFStruct</ClassName>
      <Comment>struct(col1, col2, col3, ...) - Creates a struct with the given field values</Comment>
    </routine>
    <routine id="218" parent="1" name="substr">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFSubstr</ClassName>
      <Comment>substr(str, pos[, len]) - returns the substring of str that starts at pos and is of length len orsubstr(bin, pos[, len]) - returns the slice of byte array that starts at pos and is of length len</Comment>
    </routine>
    <routine id="219" parent="1" name="substring">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFSubstr</ClassName>
      <Comment>substring(str, pos[, len]) - returns the substring of str that starts at pos and is of length len orsubstring(bin, pos[, len]) - returns the slice of byte array that starts at pos and is of length len</Comment>
    </routine>
    <routine id="220" parent="1" name="substring_index">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFSubstringIndex</ClassName>
      <Comment>substring_index(str, delim, count) - Returns the substring from string str before count occurrences of the delimiter delim.</Comment>
    </routine>
    <routine id="221" parent="1" name="sum">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFSum</ClassName>
      <Comment>sum(x) - Returns the sum of a set of numbers</Comment>
    </routine>
    <routine id="222" parent="1" name="tan">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFTan</ClassName>
      <Comment>tan(x) - returns the tangent of x (x is in radians)</Comment>
    </routine>
    <routine id="223" parent="1" name="to_date">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFDate</ClassName>
      <Comment>to_date(expr) - Extracts the date part of the date or datetime expression expr</Comment>
    </routine>
    <routine id="224" parent="1" name="to_epoch_milli">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFEpochMilli</ClassName>
      <Comment>There is no documentation for function &apos;to_epoch_milli&apos;</Comment>
    </routine>
    <routine id="225" parent="1" name="to_unix_timestamp">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFToUnixTimeStamp</ClassName>
      <Comment>to_unix_timestamp(date[, pattern]) - Returns the UNIX timestamp</Comment>
    </routine>
    <routine id="226" parent="1" name="to_utc_timestamp">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFToUtcTimestamp</ClassName>
      <Comment>to_utc_timestamp(timestamp, string timezone) - Assumes given timestamp is in given timezone and converts to UTC (as of Hive 0.8.0)</Comment>
    </routine>
    <routine id="227" parent="1" name="translate">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFTranslate</ClassName>
      <Comment>translate(input, from, to) - translates the input string by replacing the characters present in the from string with the corresponding characters in the to string</Comment>
    </routine>
    <routine id="228" parent="1" name="trim">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFTrim</ClassName>
      <Comment>trim(str) - Removes the leading and trailing space characters from str</Comment>
    </routine>
    <routine id="229" parent="1" name="trunc">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFTrunc</ClassName>
      <Comment>trunc(date, fmt) / trunc(N,D) - Returns If input is date returns date with the time portion of the day truncated to the unit specified by the format model fmt. If you omit fmt, then date is truncated to the nearest day. It currently only supports &apos;MONTH&apos;/&apos;MON&apos;/&apos;MM&apos;, &apos;QUARTER&apos;/&apos;Q&apos; and &apos;YEAR&apos;/&apos;YYYY&apos;/&apos;YY&apos; as format.If input is a number group returns N truncated to D decimal places. If D is omitted, then N is truncated to 0 places.D can be negative to truncate (make zero) D digits left of the decimal point.</Comment>
    </routine>
    <routine id="230" parent="1" name="ucase">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFUpper</ClassName>
      <Comment>ucase(str) - Returns str with all characters changed to uppercase</Comment>
    </routine>
    <routine id="231" parent="1" name="udftoboolean">
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFToBoolean</ClassName>
      <Comment>There is no documentation for function &apos;udftoboolean&apos;</Comment>
    </routine>
    <routine id="232" parent="1" name="udftobyte">
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFToByte</ClassName>
      <Comment>There is no documentation for function &apos;udftobyte&apos;</Comment>
    </routine>
    <routine id="233" parent="1" name="udftodouble">
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFToDouble</ClassName>
      <Comment>There is no documentation for function &apos;udftodouble&apos;</Comment>
    </routine>
    <routine id="234" parent="1" name="udftofloat">
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFToFloat</ClassName>
      <Comment>There is no documentation for function &apos;udftofloat&apos;</Comment>
    </routine>
    <routine id="235" parent="1" name="udftointeger">
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFToInteger</ClassName>
      <Comment>There is no documentation for function &apos;udftointeger&apos;</Comment>
    </routine>
    <routine id="236" parent="1" name="udftolong">
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFToLong</ClassName>
      <Comment>There is no documentation for function &apos;udftolong&apos;</Comment>
    </routine>
    <routine id="237" parent="1" name="udftoshort">
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFToShort</ClassName>
      <Comment>There is no documentation for function &apos;udftoshort&apos;</Comment>
    </routine>
    <routine id="238" parent="1" name="udftostring">
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFToString</ClassName>
      <Comment>There is no documentation for function &apos;udftostring&apos;</Comment>
    </routine>
    <routine id="239" parent="1" name="unbase64">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFUnbase64</ClassName>
      <Comment>unbase64(str) - Convert the argument from a base 64 string to binary</Comment>
    </routine>
    <routine id="240" parent="1" name="unhex">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFUnhex</ClassName>
      <Comment>unhex(str) - Converts hexadecimal argument to binary</Comment>
    </routine>
    <routine id="241" parent="1" name="unix_timestamp">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFUnixTimeStamp</ClassName>
      <Comment>unix_timestamp(date[, pattern]) - Converts the time to a number</Comment>
    </routine>
    <routine id="242" parent="1" name="upper">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFUpper</ClassName>
      <Comment>upper(str) - Returns str with all characters changed to uppercase</Comment>
    </routine>
    <routine id="243" parent="1" name="uuid">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFUUID</ClassName>
      <Comment>uuid() - Returns a universally unique identifier (UUID) string.</Comment>
    </routine>
    <routine id="244" parent="1" name="var_pop">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFVariance</ClassName>
      <Comment>var_pop(x) - Returns the variance of a set of numbers</Comment>
    </routine>
    <routine id="245" parent="1" name="var_samp">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFVarianceSample</ClassName>
      <Comment>var_samp(x) - Returns the sample variance of a set of numbers.</Comment>
    </routine>
    <routine id="246" parent="1" name="variance">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDAFVariance</ClassName>
      <Comment>variance(x) - Returns the variance of a set of numbers</Comment>
    </routine>
    <routine id="247" parent="1" name="version">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFVersion</ClassName>
      <Comment>version() - Returns the Hive build version string - includes base version and revision.</Comment>
    </routine>
    <routine id="248" parent="1" name="weekofyear">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFWeekOfYear</ClassName>
      <Comment>weekofyear(date) - Returns the week of the year of the given date. A week is considered to start on a Monday and week 1 is the first week with &gt;3 days.</Comment>
    </routine>
    <routine id="249" parent="1" name="width_bucket">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.generic.GenericUDFWidthBucket</ClassName>
      <Comment>width_bucket(expr, min_value, max_value, num_buckets) - Returns an integer between 0 and num_buckets+1 by mapping the expr into buckets defined by the range [min_value, max_value]</Comment>
    </routine>
    <routine id="250" parent="1" name="windowingtablefunction">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.ptf.WindowingTableFunction$WindowingTableFunctionResolver</ClassName>
      <Comment>There is no documentation for function &apos;windowingtablefunction&apos;</Comment>
    </routine>
    <routine id="251" parent="1" name="xpath">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.xml.GenericUDFXPath</ClassName>
      <Comment>xpath(xml, xpath) - Returns a string array of values within xml nodes that match the xpath expression</Comment>
    </routine>
    <routine id="252" parent="1" name="xpath_boolean">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.xml.UDFXPathBoolean</ClassName>
      <Comment>xpath_boolean(xml, xpath) - Evaluates a boolean xpath expression</Comment>
    </routine>
    <routine id="253" parent="1" name="xpath_double">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.xml.UDFXPathDouble</ClassName>
      <Comment>xpath_double(xml, xpath) - Returns a double value that matches the xpath expression</Comment>
    </routine>
    <routine id="254" parent="1" name="xpath_float">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.xml.UDFXPathFloat</ClassName>
      <Comment>xpath_float(xml, xpath) - Returns a float value that matches the xpath expression</Comment>
    </routine>
    <routine id="255" parent="1" name="xpath_int">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.xml.UDFXPathInteger</ClassName>
      <Comment>xpath_int(xml, xpath) - Returns an integer value that matches the xpath expression</Comment>
    </routine>
    <routine id="256" parent="1" name="xpath_long">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.xml.UDFXPathLong</ClassName>
      <Comment>xpath_long(xml, xpath) - Returns a long value that matches the xpath expression</Comment>
    </routine>
    <routine id="257" parent="1" name="xpath_number">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.xml.UDFXPathDouble</ClassName>
      <Comment>xpath_number(xml, xpath) - Returns a double value that matches the xpath expression</Comment>
    </routine>
    <routine id="258" parent="1" name="xpath_short">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.xml.UDFXPathShort</ClassName>
      <Comment>xpath_short(xml, xpath) - Returns a short value that matches the xpath expression</Comment>
    </routine>
    <routine id="259" parent="1" name="xpath_string">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.xml.UDFXPathString</ClassName>
      <Comment>xpath_string(xml, xpath) - Returns the text contents of the first xml node that matches the xpath expression</Comment>
    </routine>
    <routine id="260" parent="1" name="year">
      <AutoCreated>1</AutoCreated>
      <ClassName>org.apache.hadoop.hive.ql.udf.UDFYear</ClassName>
      <Comment>year(param) - Returns the year component of the date/timestamp/interval</Comment>
    </routine>
    <schema id="261" parent="1" name="default">
      <Comment>Default Hive database</Comment>
      <Current>1</Current>
      <Location>hdfs://mycluster/user/hive/warehouse</Location>
    </schema>
    <schema id="262" parent="1" name="stock">
      <Location>hdfs://mycluster/user/hive/warehouse/stock.db</Location>
    </schema>
    <schema id="263" parent="1" name="test">
      <Location>hdfs://mycluster/user/hive/warehouse/test.db</Location>
    </schema>
    <schema id="264" parent="1" name="user_profile">
      <Location>hdfs://mycluster/user/hive/warehouse/user_profile.db</Location>
    </schema>
    <table id="265" parent="262" name="ads_stock_suggest_di">
      <Comment>股票推荐 （top10）</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="266" parent="262" name="dim_dc_stock_plate_df">
      <Comment> 东方财富-板块维表</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="267" parent="262" name="dwd_stock_quotes_di">
      <Comment>沪深A股行情表</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="268" parent="262" name="ods_dc_stock_concept_plate_df">
      <Comment> 东方财富-沪深板块-概念板块-板块成份股</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="269" parent="262" name="ods_dc_stock_concept_plate_name_di">
      <Comment>东方财富-沪深板块-概念板块</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="270" parent="262" name="ods_dc_stock_industry_plate_df">
      <Comment>东方财富-沪深板块-行业板块-板块成份股</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="271" parent="262" name="ods_dc_stock_industry_plate_name_di">
      <Comment>东方财富-沪深京板块-行业板块</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="272" parent="262" name="ods_dc_stock_quotes_di">
      <Comment>东财沪深A股行情表 （后复权）</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="273" parent="262" name="ods_dc_stock_tfp_di">
      <Comment>东方财富网-数据中心-特色数据-两市停复牌表</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="274" parent="262" name="ods_financial_analysis_indicator_di">
      <Comment>新浪财经-财务分析-财务指标</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="275" parent="262" name="ods_lg_indicator_di">
      <Comment>乐咕乐股-A 股个股指标表 没有京股数据会是随机数</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="276" parent="262" name="ods_stock_lhb_detail_em_di">
      <Comment>东方财富网-数据中心-龙虎榜单-龙虎榜详情</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="277" parent="262" name="ods_stock_lrb_em_di">
      <Comment>东方财富-数据中心-年报季报-业绩快报-利润表</Comment>
      <Temporary>1</Temporary>
    </table>
    <table id="278" parent="263" name="student">
      <Temporary>1</Temporary>
    </table>
    <table id="279" parent="263" name="teacher">
      <Temporary>1</Temporary>
    </table>
    <column id="280" parent="265" name="trade_date">
      <Comment>交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>1</Position>
    </column>
    <column id="281" parent="265" name="stock_code">
      <Comment>股票代码</Comment>
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="282" parent="265" name="stock_name">
      <Comment>股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="283" parent="265" name="open_price">
      <Comment>开盘价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>4</Position>
    </column>
    <column id="284" parent="265" name="close_price">
      <Comment>收盘价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>5</Position>
    </column>
    <column id="285" parent="265" name="high_price">
      <Comment>最高价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>6</Position>
    </column>
    <column id="286" parent="265" name="low_price">
      <Comment>最低价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>7</Position>
    </column>
    <column id="287" parent="265" name="volume">
      <Comment>成交量</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>8</Position>
    </column>
    <column id="288" parent="265" name="volume_ratio_1d">
      <Comment>量比_1d 与昨日对比</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>9</Position>
    </column>
    <column id="289" parent="265" name="volume_ratio_5d">
      <Comment>量比：过去5个交易日</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>10</Position>
    </column>
    <column id="290" parent="265" name="turnover">
      <Comment>成交额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>11</Position>
    </column>
    <column id="291" parent="265" name="amplitude">
      <Comment>振幅</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>12</Position>
    </column>
    <column id="292" parent="265" name="change_percent">
      <Comment>涨跌幅</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>13</Position>
    </column>
    <column id="293" parent="265" name="change_amount">
      <Comment>涨跌额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>14</Position>
    </column>
    <column id="294" parent="265" name="turnover_rate">
      <Comment>换手率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>15</Position>
    </column>
    <column id="295" parent="265" name="turnover_rate_5d">
      <Comment>5日平均换手率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>16</Position>
    </column>
    <column id="296" parent="265" name="turnover_rate_10d">
      <Comment>10日平均换手率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>17</Position>
    </column>
    <column id="297" parent="265" name="total_market_value">
      <Comment>总市值</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>18</Position>
    </column>
    <column id="298" parent="265" name="industry_plate">
      <Comment>行业板块</Comment>
      <DataType>string|12s</DataType>
      <Position>19</Position>
    </column>
    <column id="299" parent="265" name="concept_plates">
      <Comment>概念板块 ,拼接</Comment>
      <DataType>string|12s</DataType>
      <Position>20</Position>
    </column>
    <column id="300" parent="265" name="pe">
      <Comment>市盈率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>21</Position>
    </column>
    <column id="301" parent="265" name="pe_ttm">
      <Comment>市盈率TTM</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>22</Position>
    </column>
    <column id="302" parent="265" name="pb">
      <Comment>市净率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>23</Position>
    </column>
    <column id="303" parent="265" name="ps">
      <Comment>市销率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>24</Position>
    </column>
    <column id="304" parent="265" name="ps_ttm">
      <Comment>市销率TTM</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>25</Position>
    </column>
    <column id="305" parent="265" name="dv_ratio">
      <Comment>股息率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>26</Position>
    </column>
    <column id="306" parent="265" name="dv_ttm">
      <Comment>股息率TTM</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>27</Position>
    </column>
    <column id="307" parent="265" name="net_profit">
      <Comment>净利润</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>28</Position>
    </column>
    <column id="308" parent="265" name="net_profit_yr">
      <Comment>净利润同比</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>29</Position>
    </column>
    <column id="309" parent="265" name="total_business_income">
      <Comment>营业总收入</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>30</Position>
    </column>
    <column id="310" parent="265" name="total_business_income_yr">
      <Comment>营业总收入同比</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>31</Position>
    </column>
    <column id="311" parent="265" name="business_fee">
      <Comment>营业总支出-营业支出</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>32</Position>
    </column>
    <column id="312" parent="265" name="sales_fee">
      <Comment>营业总支出-销售费用</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>33</Position>
    </column>
    <column id="313" parent="265" name="management_fee">
      <Comment>营业总支出-管理费用</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>34</Position>
    </column>
    <column id="314" parent="265" name="finance_fee">
      <Comment>营业总支出-财务费用</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>35</Position>
    </column>
    <column id="315" parent="265" name="total_business_fee">
      <Comment>营业总支出-营业总支出</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>36</Position>
    </column>
    <column id="316" parent="265" name="business_profit">
      <Comment>营业利润</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>37</Position>
    </column>
    <column id="317" parent="265" name="total_profit">
      <Comment>利润总额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>38</Position>
    </column>
    <column id="318" parent="265" name="ps_business_cash_flow">
      <Comment>每股经营性现金流(元)</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>39</Position>
    </column>
    <column id="319" parent="265" name="return_on_equity">
      <Comment>净资产收益率(%)</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>40</Position>
    </column>
    <column id="320" parent="265" name="npadnrgal">
      <Comment>扣除非经常性损益后的净利润(元)</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>41</Position>
    </column>
    <column id="321" parent="265" name="net_profit_growth_rate">
      <Comment>净利润增长率(%)</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>42</Position>
    </column>
    <column id="322" parent="265" name="interprets">
      <Comment>解读 ;拼接</Comment>
      <DataType>string|12s</DataType>
      <Position>43</Position>
    </column>
    <column id="323" parent="265" name="reason_for_lhbs">
      <Comment>上榜原因 ;拼接</Comment>
      <DataType>string|12s</DataType>
      <Position>44</Position>
    </column>
    <column id="324" parent="265" name="lhb_num_5d">
      <Comment>最近5天_龙虎榜上榜次数</Comment>
      <DataType>int|4s</DataType>
      <Position>45</Position>
    </column>
    <column id="325" parent="265" name="lhb_num_10d">
      <Comment>最近10天_龙虎榜上榜次数</Comment>
      <DataType>int|4s</DataType>
      <Position>46</Position>
    </column>
    <column id="326" parent="265" name="lhb_num_30d">
      <Comment>最近30天_龙虎榜上榜次数</Comment>
      <DataType>int|4s</DataType>
      <Position>47</Position>
    </column>
    <column id="327" parent="265" name="lhb_num_60d">
      <Comment>最近60天_龙虎榜上榜次数</Comment>
      <DataType>int|4s</DataType>
      <Position>48</Position>
    </column>
    <column id="328" parent="265" name="ma_5d">
      <Comment>5日均线</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>49</Position>
    </column>
    <column id="329" parent="265" name="ma_10d">
      <Comment>10日均线</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>50</Position>
    </column>
    <column id="330" parent="265" name="ma_20d">
      <Comment>20日均线</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>51</Position>
    </column>
    <column id="331" parent="265" name="ma_30d">
      <Comment>30日均线</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>52</Position>
    </column>
    <column id="332" parent="265" name="ma_60d">
      <Comment>60日均线</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>53</Position>
    </column>
    <column id="333" parent="265" name="stock_label_names">
      <Comment>股票标签名称 负面标签后缀用- ,拼接</Comment>
      <DataType>string|12s</DataType>
      <Position>54</Position>
    </column>
    <column id="334" parent="265" name="stock_label_num">
      <Comment>股票标签数量</Comment>
      <DataType>int|4s</DataType>
      <Position>55</Position>
    </column>
    <column id="335" parent="265" name="factor_names">
      <Comment>因子标签名称 负面因子后缀用- ,拼接</Comment>
      <DataType>string|12s</DataType>
      <Position>56</Position>
    </column>
    <column id="336" parent="265" name="factor_score">
      <Comment>因子分数 负面因子后缀用-</Comment>
      <DataType>int|4s</DataType>
      <Position>57</Position>
    </column>
    <column id="337" parent="265" name="stock_strategy_name">
      <Comment>股票策略名称 股票标签名称 +拼接</Comment>
      <DataType>string|12s</DataType>
      <Position>58</Position>
    </column>
    <column id="338" parent="265" name="stock_strategy_ranking">
      <Comment>策略内排行 dense_rank</Comment>
      <DataType>string|12s</DataType>
      <Position>59</Position>
    </column>
    <column id="339" parent="265" name="holding_yield_2d">
      <Comment>持股2日后收益率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>60</Position>
    </column>
    <column id="340" parent="265" name="holding_yield_5d">
      <Comment>持股5日后收益率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>61</Position>
    </column>
    <column id="341" parent="265" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>62</Position>
    </column>
    <column id="342" parent="265" name="td">
      <Comment>分区_交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>63</Position>
    </column>
    <column id="343" parent="266" name="stock_code">
      <Comment>股票代码</Comment>
      <DataType>string|12s</DataType>
      <Position>1</Position>
    </column>
    <column id="344" parent="266" name="stock_name">
      <Comment>股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="345" parent="266" name="industry_plate">
      <Comment>行业板块</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="346" parent="266" name="concept_plates">
      <Comment>概念板块 ,拼接</Comment>
      <DataType>string|12s</DataType>
      <Position>4</Position>
    </column>
    <column id="347" parent="266" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>5</Position>
    </column>
    <column id="348" parent="267" name="trade_date">
      <Comment>交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>1</Position>
    </column>
    <column id="349" parent="267" name="stock_code">
      <Comment>股票代码</Comment>
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="350" parent="267" name="stock_name">
      <Comment>股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="351" parent="267" name="open_price">
      <Comment>开盘价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>4</Position>
    </column>
    <column id="352" parent="267" name="close_price">
      <Comment>收盘价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>5</Position>
    </column>
    <column id="353" parent="267" name="high_price">
      <Comment>最高价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>6</Position>
    </column>
    <column id="354" parent="267" name="low_price">
      <Comment>最低价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>7</Position>
    </column>
    <column id="355" parent="267" name="volume">
      <Comment>成交量</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>8</Position>
    </column>
    <column id="356" parent="267" name="volume_ratio_1d">
      <Comment>量比_1d 与昨日对比</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>9</Position>
    </column>
    <column id="357" parent="267" name="volume_ratio_5d">
      <Comment>量比：过去5个交易日</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>10</Position>
    </column>
    <column id="358" parent="267" name="turnover">
      <Comment>成交额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>11</Position>
    </column>
    <column id="359" parent="267" name="amplitude">
      <Comment>振幅</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>12</Position>
    </column>
    <column id="360" parent="267" name="change_percent">
      <Comment>涨跌幅</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>13</Position>
    </column>
    <column id="361" parent="267" name="change_amount">
      <Comment>涨跌额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>14</Position>
    </column>
    <column id="362" parent="267" name="turnover_rate">
      <Comment>换手率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>15</Position>
    </column>
    <column id="363" parent="267" name="turnover_rate_5d">
      <Comment>5日平均换手率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>16</Position>
    </column>
    <column id="364" parent="267" name="turnover_rate_10d">
      <Comment>10日平均换手率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>17</Position>
    </column>
    <column id="365" parent="267" name="total_market_value">
      <Comment>总市值</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>18</Position>
    </column>
    <column id="366" parent="267" name="industry_plate">
      <Comment>行业板块</Comment>
      <DataType>string|12s</DataType>
      <Position>19</Position>
    </column>
    <column id="367" parent="267" name="concept_plates">
      <Comment>概念板块 ,拼接</Comment>
      <DataType>string|12s</DataType>
      <Position>20</Position>
    </column>
    <column id="368" parent="267" name="pe">
      <Comment>市盈率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>21</Position>
    </column>
    <column id="369" parent="267" name="pe_ttm">
      <Comment>市盈率TTM</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>22</Position>
    </column>
    <column id="370" parent="267" name="pb">
      <Comment>市净率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>23</Position>
    </column>
    <column id="371" parent="267" name="ps">
      <Comment>市销率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>24</Position>
    </column>
    <column id="372" parent="267" name="ps_ttm">
      <Comment>市销率TTM</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>25</Position>
    </column>
    <column id="373" parent="267" name="dv_ratio">
      <Comment>股息率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>26</Position>
    </column>
    <column id="374" parent="267" name="dv_ttm">
      <Comment>股息率TTM</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>27</Position>
    </column>
    <column id="375" parent="267" name="net_profit">
      <Comment>净利润</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>28</Position>
    </column>
    <column id="376" parent="267" name="net_profit_yr">
      <Comment>净利润同比</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>29</Position>
    </column>
    <column id="377" parent="267" name="total_business_income">
      <Comment>营业总收入</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>30</Position>
    </column>
    <column id="378" parent="267" name="total_business_income_yr">
      <Comment>营业总收入同比</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>31</Position>
    </column>
    <column id="379" parent="267" name="business_fee">
      <Comment>营业总支出-营业支出</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>32</Position>
    </column>
    <column id="380" parent="267" name="sales_fee">
      <Comment>营业总支出-销售费用</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>33</Position>
    </column>
    <column id="381" parent="267" name="management_fee">
      <Comment>营业总支出-管理费用</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>34</Position>
    </column>
    <column id="382" parent="267" name="finance_fee">
      <Comment>营业总支出-财务费用</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>35</Position>
    </column>
    <column id="383" parent="267" name="total_business_fee">
      <Comment>营业总支出-营业总支出</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>36</Position>
    </column>
    <column id="384" parent="267" name="business_profit">
      <Comment>营业利润</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>37</Position>
    </column>
    <column id="385" parent="267" name="total_profit">
      <Comment>利润总额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>38</Position>
    </column>
    <column id="386" parent="267" name="ps_business_cash_flow">
      <Comment>每股经营性现金流(元)</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>39</Position>
    </column>
    <column id="387" parent="267" name="return_on_equity">
      <Comment>净资产收益率(%)</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>40</Position>
    </column>
    <column id="388" parent="267" name="npadnrgal">
      <Comment>扣除非经常性损益后的净利润(元)</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>41</Position>
    </column>
    <column id="389" parent="267" name="net_profit_growth_rate">
      <Comment>净利润增长率(%)</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>42</Position>
    </column>
    <column id="390" parent="267" name="interprets">
      <Comment>解读 ;拼接</Comment>
      <DataType>string|12s</DataType>
      <Position>43</Position>
    </column>
    <column id="391" parent="267" name="reason_for_lhbs">
      <Comment>上榜原因 ;拼接</Comment>
      <DataType>string|12s</DataType>
      <Position>44</Position>
    </column>
    <column id="392" parent="267" name="lhb_num_5d">
      <Comment>最近5天_龙虎榜上榜次数</Comment>
      <DataType>int|4s</DataType>
      <Position>45</Position>
    </column>
    <column id="393" parent="267" name="lhb_num_10d">
      <Comment>最近10天_龙虎榜上榜次数</Comment>
      <DataType>int|4s</DataType>
      <Position>46</Position>
    </column>
    <column id="394" parent="267" name="lhb_num_30d">
      <Comment>最近30天_龙虎榜上榜次数</Comment>
      <DataType>int|4s</DataType>
      <Position>47</Position>
    </column>
    <column id="395" parent="267" name="lhb_num_60d">
      <Comment>最近60天_龙虎榜上榜次数</Comment>
      <DataType>int|4s</DataType>
      <Position>48</Position>
    </column>
    <column id="396" parent="267" name="ma_5d">
      <Comment>5日均线</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>49</Position>
    </column>
    <column id="397" parent="267" name="ma_10d">
      <Comment>10日均线</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>50</Position>
    </column>
    <column id="398" parent="267" name="ma_20d">
      <Comment>20日均线</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>51</Position>
    </column>
    <column id="399" parent="267" name="ma_30d">
      <Comment>30日均线</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>52</Position>
    </column>
    <column id="400" parent="267" name="ma_60d">
      <Comment>60日均线</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>53</Position>
    </column>
    <column id="401" parent="267" name="stock_label_names">
      <Comment>股票标签名称 负面标签后缀用- ,拼接</Comment>
      <DataType>string|12s</DataType>
      <Position>54</Position>
    </column>
    <column id="402" parent="267" name="stock_label_num">
      <Comment>股票标签数量</Comment>
      <DataType>int|4s</DataType>
      <Position>55</Position>
    </column>
    <column id="403" parent="267" name="factor_names">
      <Comment>因子标签名称 负面因子后缀用- ,拼接</Comment>
      <DataType>string|12s</DataType>
      <Position>56</Position>
    </column>
    <column id="404" parent="267" name="factor_score">
      <Comment>因子分数 负面因子后缀用-</Comment>
      <DataType>int|4s</DataType>
      <Position>57</Position>
    </column>
    <column id="405" parent="267" name="holding_yield_2d">
      <Comment>持股2日后收益率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>58</Position>
    </column>
    <column id="406" parent="267" name="holding_yield_5d">
      <Comment>持股5日后收益率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>59</Position>
    </column>
    <column id="407" parent="267" name="suspension_time">
      <Comment>停牌时间</Comment>
      <DataType>string|12s</DataType>
      <Position>60</Position>
    </column>
    <column id="408" parent="267" name="suspension_deadline">
      <Comment>停牌截止时间</Comment>
      <DataType>string|12s</DataType>
      <Position>61</Position>
    </column>
    <column id="409" parent="267" name="suspension_period">
      <Comment>停牌期限</Comment>
      <DataType>string|12s</DataType>
      <Position>62</Position>
    </column>
    <column id="410" parent="267" name="suspension_reason">
      <Comment>停牌原因</Comment>
      <DataType>string|12s</DataType>
      <Position>63</Position>
    </column>
    <column id="411" parent="267" name="belongs_market">
      <Comment>所属市场</Comment>
      <DataType>string|12s</DataType>
      <Position>64</Position>
    </column>
    <column id="412" parent="267" name="estimated_resumption_time">
      <Comment>预计复牌时间</Comment>
      <DataType>string|12s</DataType>
      <Position>65</Position>
    </column>
    <column id="413" parent="267" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>66</Position>
    </column>
    <column id="414" parent="267" name="td">
      <Comment>分区_交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>67</Position>
    </column>
    <column id="415" parent="268" name="stock_code">
      <Comment>股票代码</Comment>
      <DataType>string|12s</DataType>
      <Position>1</Position>
    </column>
    <column id="416" parent="268" name="stock_name">
      <Comment>股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="417" parent="268" name="concept_plate">
      <Comment>概念板块</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="418" parent="268" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>4</Position>
    </column>
    <column id="419" parent="269" name="trade_date">
      <Comment>交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>1</Position>
    </column>
    <column id="420" parent="269" name="concept_plate_code">
      <Comment>概念板块代码</Comment>
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="421" parent="269" name="concept_plate">
      <Comment>概念板块名称</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="422" parent="269" name="new_price">
      <Comment>最新价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>4</Position>
    </column>
    <column id="423" parent="269" name="change_amount">
      <Comment>涨跌额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>5</Position>
    </column>
    <column id="424" parent="269" name="change_percent">
      <Comment>涨跌幅</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>6</Position>
    </column>
    <column id="425" parent="269" name="total_market_value">
      <Comment>总市值</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>7</Position>
    </column>
    <column id="426" parent="269" name="turnover_rate">
      <Comment>换手率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>8</Position>
    </column>
    <column id="427" parent="269" name="rise_num">
      <Comment>上涨家数</Comment>
      <DataType>int|4s</DataType>
      <Position>9</Position>
    </column>
    <column id="428" parent="269" name="fall_num">
      <Comment>下跌家数</Comment>
      <DataType>int|4s</DataType>
      <Position>10</Position>
    </column>
    <column id="429" parent="269" name="leading_stock_name">
      <Comment>领涨股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>11</Position>
    </column>
    <column id="430" parent="269" name="leading_stock_change_percent">
      <Comment>领涨股票-涨跌幅</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>12</Position>
    </column>
    <column id="431" parent="269" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>13</Position>
    </column>
    <column id="432" parent="269" name="td">
      <Comment>分区_交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>14</Position>
    </column>
    <column id="433" parent="270" name="stock_code">
      <Comment>股票代码</Comment>
      <DataType>string|12s</DataType>
      <Position>1</Position>
    </column>
    <column id="434" parent="270" name="stock_name">
      <Comment>股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="435" parent="270" name="industry_plate">
      <Comment>行业板块</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="436" parent="270" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>4</Position>
    </column>
    <column id="437" parent="271" name="trade_date">
      <Comment>交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>1</Position>
    </column>
    <column id="438" parent="271" name="industry_plate_code">
      <Comment>行业板块代码</Comment>
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="439" parent="271" name="industry_plate">
      <Comment>行业板块名称</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="440" parent="271" name="new_price">
      <Comment>最新价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>4</Position>
    </column>
    <column id="441" parent="271" name="change_amount">
      <Comment>涨跌额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>5</Position>
    </column>
    <column id="442" parent="271" name="change_percent">
      <Comment>涨跌幅</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>6</Position>
    </column>
    <column id="443" parent="271" name="total_market_value">
      <Comment>总市值</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>7</Position>
    </column>
    <column id="444" parent="271" name="turnover_rate">
      <Comment>换手率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>8</Position>
    </column>
    <column id="445" parent="271" name="rise_num">
      <Comment>上涨家数</Comment>
      <DataType>int|4s</DataType>
      <Position>9</Position>
    </column>
    <column id="446" parent="271" name="fall_num">
      <Comment>下跌家数</Comment>
      <DataType>int|4s</DataType>
      <Position>10</Position>
    </column>
    <column id="447" parent="271" name="leading_stock_name">
      <Comment>领涨股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>11</Position>
    </column>
    <column id="448" parent="271" name="leading_stock_change_percent">
      <Comment>领涨股票-涨跌幅</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>12</Position>
    </column>
    <column id="449" parent="271" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>13</Position>
    </column>
    <column id="450" parent="271" name="td">
      <Comment>分区_交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>14</Position>
    </column>
    <column id="451" parent="272" name="trade_date">
      <Comment>交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>1</Position>
    </column>
    <column id="452" parent="272" name="stock_code">
      <Comment>股票代码</Comment>
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="453" parent="272" name="stock_name">
      <Comment>股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="454" parent="272" name="open_price">
      <Comment>开盘价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>4</Position>
    </column>
    <column id="455" parent="272" name="close_price">
      <Comment>收盘价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>5</Position>
    </column>
    <column id="456" parent="272" name="high_price">
      <Comment>最高价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>6</Position>
    </column>
    <column id="457" parent="272" name="low_price">
      <Comment>最低价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>7</Position>
    </column>
    <column id="458" parent="272" name="volume">
      <Comment>成交量</Comment>
      <DataType>bigint|-5s</DataType>
      <Position>8</Position>
    </column>
    <column id="459" parent="272" name="turnover">
      <Comment>成交额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>9</Position>
    </column>
    <column id="460" parent="272" name="amplitude">
      <Comment>振幅</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>10</Position>
    </column>
    <column id="461" parent="272" name="change_percent">
      <Comment>涨跌幅</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>11</Position>
    </column>
    <column id="462" parent="272" name="change_amount">
      <Comment>涨跌额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>12</Position>
    </column>
    <column id="463" parent="272" name="turnover_rate">
      <Comment>换手率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>13</Position>
    </column>
    <column id="464" parent="272" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>14</Position>
    </column>
    <column id="465" parent="272" name="td">
      <Comment>分区_交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>15</Position>
    </column>
    <column id="466" parent="273" name="trade_date">
      <Comment>交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>1</Position>
    </column>
    <column id="467" parent="273" name="stock_code">
      <Comment>股票代码</Comment>
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="468" parent="273" name="stock_name">
      <Comment>股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="469" parent="273" name="suspension_time">
      <Comment>停牌时间</Comment>
      <DataType>string|12s</DataType>
      <Position>4</Position>
    </column>
    <column id="470" parent="273" name="suspension_deadline">
      <Comment>停牌截止时间</Comment>
      <DataType>string|12s</DataType>
      <Position>5</Position>
    </column>
    <column id="471" parent="273" name="suspension_period">
      <Comment>停牌期限</Comment>
      <DataType>string|12s</DataType>
      <Position>6</Position>
    </column>
    <column id="472" parent="273" name="suspension_reason">
      <Comment>停牌原因</Comment>
      <DataType>string|12s</DataType>
      <Position>7</Position>
    </column>
    <column id="473" parent="273" name="belongs_market">
      <Comment>所属市场</Comment>
      <DataType>string|12s</DataType>
      <Position>8</Position>
    </column>
    <column id="474" parent="273" name="estimated_resumption_time">
      <Comment>预计复牌时间</Comment>
      <DataType>string|12s</DataType>
      <Position>9</Position>
    </column>
    <column id="475" parent="273" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>10</Position>
    </column>
    <column id="476" parent="273" name="td">
      <Comment>分区_交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>11</Position>
    </column>
    <column id="477" parent="274" name="announcement_date">
      <Comment>公告日期</Comment>
      <DataType>date|91s</DataType>
      <Position>1</Position>
    </column>
    <column id="478" parent="274" name="stock_code">
      <Comment>股票代码</Comment>
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="479" parent="274" name="stock_name">
      <Comment>股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="480" parent="274" name="ps_business_cash_flow">
      <Comment>每股经营性现金流(元)</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>4</Position>
    </column>
    <column id="481" parent="274" name="return_on_equity">
      <Comment>净资产收益率(%)</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>5</Position>
    </column>
    <column id="482" parent="274" name="npadnrgal">
      <Comment>扣除非经常性损益后的净利润(元)</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>6</Position>
    </column>
    <column id="483" parent="274" name="net_profit_growth_rate">
      <Comment>净利润增长率(%)</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>7</Position>
    </column>
    <column id="484" parent="274" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>8</Position>
    </column>
    <column id="485" parent="274" name="td">
      <Comment>分区_公告日期</Comment>
      <DataType>date|91s</DataType>
      <Position>9</Position>
    </column>
    <column id="486" parent="275" name="trade_date">
      <Comment>交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>1</Position>
    </column>
    <column id="487" parent="275" name="stock_code">
      <Comment>股票代码</Comment>
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="488" parent="275" name="stock_name">
      <Comment>股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="489" parent="275" name="pe">
      <Comment>市盈率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>4</Position>
    </column>
    <column id="490" parent="275" name="pe_ttm">
      <Comment>市盈率TTM</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>5</Position>
    </column>
    <column id="491" parent="275" name="pb">
      <Comment>市净率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>6</Position>
    </column>
    <column id="492" parent="275" name="ps">
      <Comment>市销率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>7</Position>
    </column>
    <column id="493" parent="275" name="ps_ttm">
      <Comment>市销率TTM</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>8</Position>
    </column>
    <column id="494" parent="275" name="dv_ratio">
      <Comment>股息率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>9</Position>
    </column>
    <column id="495" parent="275" name="dv_ttm">
      <Comment>股息率TTM</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>10</Position>
    </column>
    <column id="496" parent="275" name="total_market_value">
      <Comment>总市值</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>11</Position>
    </column>
    <column id="497" parent="275" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>12</Position>
    </column>
    <column id="498" parent="275" name="td">
      <Comment>分区_交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>13</Position>
    </column>
    <column id="499" parent="276" name="trade_date">
      <Comment>交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>1</Position>
    </column>
    <column id="500" parent="276" name="ranking">
      <Comment>排名</Comment>
      <DataType>int|4s</DataType>
      <Position>2</Position>
    </column>
    <column id="501" parent="276" name="stock_code">
      <Comment>股票代码</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="502" parent="276" name="stock_name">
      <Comment>股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>4</Position>
    </column>
    <column id="503" parent="276" name="close_price">
      <Comment>收盘价</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>5</Position>
    </column>
    <column id="504" parent="276" name="change_percent">
      <Comment>涨跌幅</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>6</Position>
    </column>
    <column id="505" parent="276" name="circulating_market_value">
      <Comment>流通市值</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>7</Position>
    </column>
    <column id="506" parent="276" name="turnover_rate">
      <Comment>换手率</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>8</Position>
    </column>
    <column id="507" parent="276" name="interpret">
      <Comment>解读</Comment>
      <DataType>string|12s</DataType>
      <Position>9</Position>
    </column>
    <column id="508" parent="276" name="reason_for_lhb">
      <Comment>上榜原因</Comment>
      <DataType>string|12s</DataType>
      <Position>10</Position>
    </column>
    <column id="509" parent="276" name="lhb_net_buy">
      <Comment>龙虎榜净买额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>11</Position>
    </column>
    <column id="510" parent="276" name="lhb_buy_amount">
      <Comment>龙虎榜买入额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>12</Position>
    </column>
    <column id="511" parent="276" name="lhb_sell_amount">
      <Comment>龙虎榜卖出额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>13</Position>
    </column>
    <column id="512" parent="276" name="lhb_turnover">
      <Comment>龙虎榜成交额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>14</Position>
    </column>
    <column id="513" parent="276" name="total_turnover">
      <Comment>市场总成交额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>15</Position>
    </column>
    <column id="514" parent="276" name="nbtt">
      <Comment>净买额占总成交比</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>16</Position>
    </column>
    <column id="515" parent="276" name="ttt">
      <Comment>成交额占总成交比</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>17</Position>
    </column>
    <column id="516" parent="276" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>18</Position>
    </column>
    <column id="517" parent="276" name="td">
      <Comment>分区_交易日期</Comment>
      <DataType>date|91s</DataType>
      <Position>19</Position>
    </column>
    <column id="518" parent="277" name="announcement_date">
      <Comment>公告日期</Comment>
      <DataType>date|91s</DataType>
      <Position>1</Position>
    </column>
    <column id="519" parent="277" name="stock_code">
      <Comment>股票代码</Comment>
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="520" parent="277" name="stock_name">
      <Comment>股票名称</Comment>
      <DataType>string|12s</DataType>
      <Position>3</Position>
    </column>
    <column id="521" parent="277" name="net_profit">
      <Comment>净利润</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>4</Position>
    </column>
    <column id="522" parent="277" name="net_profit_yr">
      <Comment>净利润同比</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>5</Position>
    </column>
    <column id="523" parent="277" name="total_business_income">
      <Comment>营业总收入</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>6</Position>
    </column>
    <column id="524" parent="277" name="total_business_income_yr">
      <Comment>营业总收入同比</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>7</Position>
    </column>
    <column id="525" parent="277" name="business_fee">
      <Comment>营业总支出-营业支出</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>8</Position>
    </column>
    <column id="526" parent="277" name="sales_fee">
      <Comment>营业总支出-销售费用</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>9</Position>
    </column>
    <column id="527" parent="277" name="management_fee">
      <Comment>营业总支出-管理费用</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>10</Position>
    </column>
    <column id="528" parent="277" name="finance_fee">
      <Comment>营业总支出-财务费用</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>11</Position>
    </column>
    <column id="529" parent="277" name="total_business_fee">
      <Comment>营业总支出-营业总支出</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>12</Position>
    </column>
    <column id="530" parent="277" name="business_profit">
      <Comment>营业利润</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>13</Position>
    </column>
    <column id="531" parent="277" name="total_profit">
      <Comment>利润总额</Comment>
      <DataType>decimal(20,4)|3s</DataType>
      <Position>14</Position>
    </column>
    <column id="532" parent="277" name="update_time">
      <Comment>更新时间</Comment>
      <DataType>timestamp|93s</DataType>
      <Position>15</Position>
    </column>
    <column id="533" parent="277" name="td">
      <Comment>分区_公告日期</Comment>
      <DataType>date|91s</DataType>
      <Position>16</Position>
    </column>
    <column id="534" parent="278" name="id">
      <DataType>bigint|-5s</DataType>
      <Position>1</Position>
    </column>
    <column id="535" parent="278" name="name">
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
    <column id="536" parent="279" name="id">
      <DataType>int|4s</DataType>
      <Position>1</Position>
    </column>
    <column id="537" parent="279" name="name">
      <DataType>string|12s</DataType>
      <Position>2</Position>
    </column>
  </database-model>
</dataSource>